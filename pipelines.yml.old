# This pipeline uses the "local templates" feature
# https://www.jfrog.com/confluence/display/JFROG/Local+Templates
template: true
valuesFilePath: ./values.yml

resources:
  - name: app_chart
    type: HelmChart
    configuration:
      sourceArtifactory: {{ .Values.appChart.sourceArtifactory }}
      repository: {{ .Values.appChart.repoName }}
      chart: {{ .Values.appName }}
      version: 0.0.0

  - name: helm_chart_changes
    type: GitRepo
    configuration:
      gitProvider: {{ .Values.gitRepo.gitProvider }}
      path: {{ .Values.gitRepo.path }}
      branches:
        include: ^{{ .Values.gitRepo.branch }}$
      files:
        include: "{{appName}}.*"

  - name: helm_app_changes
    type: GitRepo
    configuration:
      gitProvider: {{ .Values.gitRepo.gitProvider }}
      path: {{ .Values.gitRepo.path }}
      branches:
        include: ^{{ .Values.gitRepo.branch }}$
      files:
        exclude: "{{appName}}.*"

  - name: helm_app_image
    type: Image
    configuration:
      registry: {{ .Values.appImage.registry }}
      sourceRepository: docker
      imageName: "{{ .Values.appImage.registryUrl }}/docker/{{appName}}"
      imageTag: latest

  - name: helm_app_info
    type: BuildInfo
    configuration:
      sourceArtifactory: {{ .Values.appChart.sourceArtifactory }}

pipelines:
  - name: helm_example
    steps:
      - name: build
        type: DockerBuild
        configuration:
          affinityGroup: BuildAndPush
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: "{{ .Values.appImage.registryUrl }}/docker/{{ .Values.appName }}"
          dockerImageTag: 0.0.${run_number}
          dockerOptions: "--no-cache --build-arg STEP_URL=${step_url}"
          integrations:
            - name: {{ .Values.appImage.registry }}
          inputResources:
            - name: helm_app_changes

      - name: push
        type: DockerPush
        configuration:
          affinityGroup: BuildAndPush
          targetRepository: {{ .Values.appImage.repoName }}
          autoPublishBuildInfo: true
          integrations:
            - name: {{ .Values.appImage.registry }}
          outputResources:
            - name: helm_app_image
            - name: helm_app_info
          inputSteps:
            - name: build

      - name: publish_helm_chart
        type: HelmPublish
        configuration:
          inputResources:
            - name: helm_chart_changes
          outputResources:
            - name: app_chart
          chartPath: chart

      - name: deploy_helm_chart
        type: HelmDeploy
        configuration:
          helmVersion: 3
          namespace: {{ .Values.runtime.namespace }}
          integrations:
            - name: {{ .Values.runtime.k8s_integration }}
          inputResources:
            - name: app_chart
            - name: helm_app_image
          releaseName: {{ .Values.runtime.releaseName }}
          flags: "--set image.registry='{{ .Values.appImage.registryUrl }}/docker'"
          valueFilePaths:
            - values.yaml
